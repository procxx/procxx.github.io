<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.04 [en] (Win95; I) [Netscape]">
   <TITLE>3.9.4. Построение таблиц распознавателя. Алгоритм работы распознавателя.</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<A HREF="Part312.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15 ALIGN=ABSCENTER></A><FONT COLOR="#009900"><FONT SIZE=-1>
Пред.Страница&nbsp;<A HREF="Part31.htm">&nbsp;<A HREF="Part3122.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15 ALIGN=ABSBOTTOM></A></A>
След.Страница&nbsp;<A HREF="Index3.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A>&nbsp;
Раздел&nbsp;<A HREF="../index.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A>&nbsp;
Содержание&nbsp;</FONT></FONT>&nbsp;
<HR NOSHADE WIDTH="100%">

<P><B><I><FONT COLOR="#3333FF"><FONT SIZE=+1>3.12.1. Построение таблиц
распознавателя.</FONT></FONT></I></B>
<BR><B><I><FONT COLOR="#3333FF"><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Алгоритм работы распознавателя.</FONT></FONT></I></B>
<BR><FONT COLOR="#3333FF">&nbsp;</FONT>
<BLOCKQUOTE>
<BLOCKQUOTE>Для грамматических вхождений определим две функции <TT><FONT COLOR="#660000">ВПЕРВ</FONT></TT>
и <FONT COLOR="#660000"><TT>ВПОСЛЕ</TT>.</FONT> Функция <TT>ВПЕРВ</TT>
по аналогии с функцией <TT>ПЕРВ(Y)</TT> определяет множество грамматических
вхождений, которые могут стоять на первом месте в цепочках, выводимых из
<TT>Y</TT>. Это множество строится следующим образом: в него входит символ
<TT>Y</TT> и все символы, начинающие промежуточные цепочки, выводимые из
<TT>Y</TT> без применения аннулирующих правил. Формально вторая часть утверждения
означает, что <TT>X <FONT FACE="Symbol">О</FONT> ВПЕРВ(Y)</TT>, если
<PRE>&nbsp;&nbsp;&nbsp;&nbsp; Y <FONT FACE="Symbol">Ю</FONT>* &lt;L>b <FONT FACE="Symbol">Ю</FONT> Xab</PRE>
и <TT>X</TT> является самым левым вхождением в правой части правила <TT>&lt;L>
<FONT FACE="Symbol">®</FONT> Xa</TT>.

<P>В качестве примера построим функции <TT>ВПЕРВ</TT> для символов следующей
грамматики, не содержащей аннулирующих правил:
<BLOCKQUOTE><A NAME="grammar-7.2"></A><B><FONT COLOR="#000099">Г<SUB>3.
12</SUB></FONT></B>:
<BR><TT>&lt;I> </TT><FONT FACE="Symbol">®</FONT><TT> a<SUB>1</SUB>&lt;I<SUB>12</SUB>>&lt;I<SUB>13</SUB>>b<SUB>1</SUB></TT>
<BR><TT>&lt;I> </TT><FONT FACE="Symbol">®</FONT><TT> с<SUB>2</SUB></TT></BLOCKQUOTE>
</BLOCKQUOTE>

<BLOCKQUOTE>Эти функции имеют следующий вид:
<PRE>&nbsp;&nbsp;&nbsp;&nbsp; ВПЕРВ(a<SUB>1</SUB>) = {a<SUB>1</SUB>},
&nbsp;&nbsp;&nbsp;&nbsp; ВПЕРВ(&lt;I<SUB>12</SUB>>) = {&lt;I<SUB>12</SUB>>, a<SUB>1</SUB>, с<SUB>2</SUB>},
&nbsp;&nbsp;&nbsp;&nbsp; ВПЕРВ(&lt;I<SUB>13</SUB>>) = {&lt;I<SUB>13</SUB>>, a<SUB>1</SUB>, с<SUB>2</SUB>},
&nbsp;&nbsp;&nbsp;&nbsp; ВПЕРВ(b<SUB>1</SUB>) = {b<SUB>1</SUB>},
&nbsp;&nbsp;&nbsp;&nbsp; ВПЕРВ(&lt;C<SUB>2</SUB>>) = {с<SUB>2</SUB>},
&nbsp;&nbsp;&nbsp;&nbsp; ВПЕРВ(&lt;I<SUB>0</SUB>>) = {&lt;I<SUB>0</SUB>>, a<SUB>1</SUB>, с<SUB>2</SUB>}.</PRE>
Функция <TT>ВПОСЛЕ(Y)</TT> является аналогом функции <TT>СЛЕД</TT>. Она
определяет множество грамматических вхождений, которые могут встречаться
непосредственно после Y в цепочках, выводимых из начального символа грамматики.
Правило вычисления функции <TT>ВПОСЛЕ(Y)</TT> можно записать так: если
в правой части некоторого правила после <TT>Y</TT> непосредственно следует
<TT>Z</TT>, то
<PRE>&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(Y) = ВПЕРВ(Z).</PRE>
При построении распознавателей необходимо учитывать наличие маркера дна,
поэтому, забегая вперед, сформулируем еще одно правило вычисления этой
функции: если <TT>Y</TT> является маркером дна магазина, то
<PRE>&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(h<SUB>0</SUB>) = ВПЕРВ(&lt;I<SUB>0</SUB>>),</PRE>
где <TT>&lt;I<SUB>0</SUB>></TT>—начальное вхождение.

<P>Для грамматики <B><FONT COLOR="#000099">Г<SUB>3. 12</SUB></FONT></B><SUB>
</SUB>функции <TT>ВПОСЛЕ</TT> имеют вид
<PRE>&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(a<SUB>1</SUB>) = {&lt;I<SUB>12</SUB>>, a<SUB>1</SUB>, с<SUB>2</SUB>},
&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(&lt;I<SUB>12</SUB>>) = {&lt;I<SUB>13</SUB>>, a<SUB>1</SUB>, с<SUB>2</SUB>},
&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(&lt;I<SUB>13</SUB>>) = {b<SUB>1</SUB>},
&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(b<SUB>1</SUB>) = <FONT FACE="Symbol">Ж</FONT>,
&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(&lt;C<SUB>2</SUB>>) = <FONT FACE="Symbol">Ж</FONT>,
&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(&lt;I<SUB>0</SUB>>) = <FONT FACE="Symbol">Ж</FONT>,
&nbsp;&nbsp;&nbsp;&nbsp; ВПОСЛЕ(h<SUB>0</SUB>) = {&lt;I<SUB>0</SUB>>, a<SUB>1</SUB>, с<SUB>2</SUB>}.</PRE>
Согласно определению функции <TT>ВПОСЛЕ(Y)</TT> она определяет грамматические
вхождения, которые могут следовать после вхождения <TT>Y</TT> в выводимых
или сворачиваемых цепочках. Например, если очередным грамматическим вхождением
является символ a<SUB>1 </SUB>и за ним<SUB> </SUB>должен следовать грамматический
символ I, то по значению функции ВПОСЛЕ( a<SUB>1</SUB> ) можно определить,
что символу I в этом случае соответствует вхождение I<SUB>12</SUB>. Таким
образом, при сворачивании&nbsp; с помощью функции <TT>ВПОСЛЕ(Y)</TT> можно
определить, какому грамматическому вхождению соответствует очередной грамматический
символ сворачиваемой цепочки.
<BR>Если взять последовательность&nbsp; грамматических символов,&nbsp;
то пользуясь функциями ВПОСЛЕ ей можно поставить в соответствие последовательность
грамматических вхождений.<TT> В этом случае </TT>удобно<TT> </TT>рассматривать
грамматические вхождения, как состояни конечного автомата, а грамматические
символы, как входные воздействия. Смену состояний этого автомата можно
представить в виде таблицы переходов, которая строится следующим образом.&nbsp;
Каждому грамматическому вхождению выделим одну строку таблицы, а каждому
грамматическому символу—один столбец. Клетки таблицы заполняются элементами
функций <TT>ВПОСЛЕM</TT> таким образом, что элемент <TT>X<I><SUB>k</SUB></I>
<FONT FACE="Symbol">О</FONT> ВПОСЛЕ(Y<I><SUB>j</SUB></I>)</TT> заносится
в клетку, находящуюся на пересечении строки <TT>Y<I><SUB>j</SUB></I></TT>
и столбца, отмеченного грамматическим символом <TT>X</TT>.

<P>Таблица переходов распознавателя, построенная для рассматриваемой грамматики,
имеет вид:</BLOCKQUOTE>
</BLOCKQUOTE>

<CENTER>&nbsp;</CENTER>

<CENTER><TABLE BORDER >
<CAPTION><A NAME="table-7.1"></A>Таблица 7.1</CAPTION>

<TR>
<TH WIDTH="20%"></TH>

<TH WIDTH="20%">a&nbsp;</TH>

<TH WIDTH="20%">b&nbsp;</TH>

<TH WIDTH="20%">&lt;C>&nbsp;</TH>

<TH WIDTH="20%">&lt;I></TH>
</TR>

<TR>
<TH>a<SUB>1</SUB></TH>

<TD>a<SUB>1</SUB></TD>

<TD>&nbsp;</TD>

<TD>&lt;C<SUB>2</SUB>></TD>

<TD>&lt;I<SUB>12</SUB>></TD>
</TR>

<TR>
<TH>&lt;I<SUB>12</SUB>></TH>

<TD>a<SUB>1</SUB></TD>

<TD>&nbsp;</TD>

<TD>&lt;C<SUB>2</SUB>></TD>

<TD>&lt;I<SUB>13</SUB>></TD>
</TR>

<TR>
<TH>&lt;I<SUB>13</SUB>></TH>

<TD>&nbsp;</TD>

<TD>b<SUB>1</SUB></TD>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>
</TR>

<TR>
<TH>b<SUB>1</SUB></TH>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>
</TR>

<TR>
<TH>&lt;C<SUB>2</SUB>></TH>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>
</TR>

<TR>
<TH>h<SUB>0</SUB></TH>

<TD>a<SUB>1</SUB></TD>

<TD>&nbsp;</TD>

<TD>&lt;C<SUB>2</SUB>></TD>

<TD>&lt;I<SUB>0</SUB>></TD>
</TR>

<TR>
<TH>&lt;I<SUB>0</SUB>></TH>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>

<TD>&nbsp;</TD>
</TR>
</TABLE></CENTER>
&nbsp;
<BLOCKQUOTE>
<BLOCKQUOTE>Эта таблица задает функцию

<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
f(&nbsp; B<SUB>ij</SUB> , X&nbsp; ) = X<SUB>kl</SUB>,
<BR>которая для текущего грамматического вхождения B<SUB>ij</SUB>&nbsp;
и очередного символа грамматики X определяет грпмматическое вхождение очередного
символа X<SUB>kl</SUB>.
<BR>Следует отметить, что при построении таблицы переходов в клетках таблицы
могут оказаться по несколько грамматических вхождений соответствующих символов.
Такая таблица является&nbsp; недетерминированной, и ее нужно преобразовать
в детерминированную таблицу с помощью приемов, использованных для преобразования
таблиц конечных автоматов. В результате может получиться таблица, у которой
строки отмечены множествами грамматических вхождений.

<P>Построенная таблица переходов описывает смену состояний распознавателя,
но она никак&nbsp; не отражет в каких случаея&nbsp; распознаватель должен
выполнять действия&nbsp;<A NAME="shift"></A><B><FONT COLOR="#660000">переноса</FONT></B>
прочитанных символов в магазин и <B><FONT COLOR="#660000">сворачивания</FONT></B>.
Если для хранения промежуточных цепочек, полученных в процессе сворачивания,
использовать магазин,&nbsp; то таблица переходов может быть использована
для определения грамматических вхождений, записываемых в магазин.
<BR>Для описания порядка действий магазинного распознавателя построим еще
одну таблицу. В этой таблице обозначим действие переноса&nbsp; символов
из входной цепочки в магазин символом П (Перенос), а&nbsp; действия, связанные
со сворачивание цепочек, соответствующих правым частям правил,&nbsp; обозначаим
символом С(К), где К—номер использованного правила. Для обозначения действий,
осуществляющих передачу на выход результатов работы распознавателя, условимся
использовать начальные буквы слов Допустить (Д) и Отвергнуть (О).
<BR>Учитывая, что действия преобразователя зависят как от символов входной
цепочки, так и от символов, находящихся в магазине, обозначим строки таблицы
грамматическими вхождениями, а столбцы - терминальными символами грамматики
и символом конца цепочки <FONT FACE="Symbol">^.</FONT>
<BR>Основанием для заполнения таблицы являются следующие два положения:
<BR>1. Операция сворачивания должна выполняться независимо от входного
символа всегда, если в вершине магазина находится самое правое грамматическое
вхождение некоторого правила. Для таких грамматических вхождений значением
функции ВПОСЛЕ является пустое множество.
<BR>2. Если в вершине магазина находится грамматическое вхождение, не являющиеся
самым правым вхождением какого-либо правила, то следует выполнить перенос
очередного символа входной цепочки в магазин.
<BR>Следуя эти положениям и учитывая, что прцесс распознавания заканчивается
успешно при обнаружении символа <FONT FACE="Symbol">^ </FONT>на входе и
символа I<SUB>о</SUB> в магазине, и что в оставшихся случаях входная цепочка
должна быть отвергнута, получаем таблицу действий в следующем виде:</BLOCKQUOTE>
</BLOCKQUOTE>

<CENTER>&nbsp;</CENTER>

<CENTER><TABLE BORDER >
<CAPTION>
<CENTER><A NAME="table-7.2"></A>Таблица 7.2</CENTER>
</CAPTION>

<TR>
<TH>&nbsp;</TH>

<TH>a</TH>

<TH>b</TH>

<TH>&lt;C></TH>

<TH><FONT FACE="Symbol">^</FONT></TH>
</TR>

<TR>
<TH>a<SUB>1</SUB></TH>

<TD>П</TD>

<TD>П</TD>

<TD>П</TD>

<TD>О</TD>
</TR>

<TR>
<TH>&lt;I<SUB>12</SUB>></TH>

<TD>П</TD>

<TD>П</TD>

<TD>П</TD>

<TD>О</TD>
</TR>

<TR>
<TH>&lt;I<SUB>13</SUB>></TH>

<TD>П</TD>

<TD>П</TD>

<TD>П</TD>

<TD>О</TD>
</TR>

<TR>
<TH>b<SUB>1</SUB></TH>

<TD>С(1)</TD>

<TD>С(1)</TD>

<TD>С(1)</TD>

<TD>С(1)</TD>
</TR>

<TR>
<TH>&lt;C<SUB>2</SUB>></TH>

<TD>С(2)</TD>

<TD>С(2)</TD>

<TD>С(2)</TD>

<TD>С(2)</TD>
</TR>

<TR>
<TH>h<SUB>0</SUB></TH>

<TD>П</TD>

<TD>П</TD>

<TD>П</TD>

<TD>О</TD>
</TR>

<TR>
<TH>&lt;I<SUB>0</SUB>></TH>

<TD>О</TD>

<TD>О</TD>

<TD>О</TD>

<TD>Д</TD>
</TR>
</TABLE></CENTER>
&nbsp;
<BLOCKQUOTE>
<BLOCKQUOTE>Эта таблица задает функцию действий
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
f ( B<SUB>i j</SUB> , x )&nbsp; ( - { Д, О, С (1), С (2), ..., С (N)&nbsp;
},
<BR>где N - число правил заданной грамматики, которая определяет какое
действие должен выполнить распознаватель, находящийся в состоянии B<SUB>i
j</SUB> и прочитавший выходной символ x.
<BR>Для рассматриваемого примера операции свертки определяются следующим
образом:
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
C (1) = { a<SUB>1</SUB>&lt;I<SUB>12</SUB>>&lt;I<SUB>13</SUB>>b<SUB>1</SUB>
| => I<SUB>0</SUB> },
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
C (2) = { c<SUB>2</SUB> | => I<SUB>0</SUB> }.
<BR>Последняя таблица, которую иногда называют управляющей таблицей распознавателя,
и таблица состояний полностью задают работу распознавателя. Алгоритм работы,
использующий таблицу состояний и таблицу действий можно описать так:
<OL>
<LI>
<A NAME="7.2–alg1-1"></A>Прочитать очередной символ входной цепочки—<TT>x</TT>.</LI>

<LI>
<A NAME="7.2–alg1–2"></A>Прочитать символ состояния, находящийся в вершине
магазина—<TT>Y<I><SUB>K1</SUB></I></TT>.</LI>

<LI>
<A NAME="7.2-alg1-3"></A>Прочитать значение элемента таблицы действий,
находящегося в строке <TT>Y<I><SUB>K1</SUB></I></TT> и столбце x.</LI>

<LI>
<A NAME="7.2-alg1-4"></A>Если прочитанное значение есть 0 или D, то работу
следует закончить, поскольку результат получен.</LI>

<LI>
<A NAME="7.2–alg1-5"></A>Если прочитанное значение определяет операцию,
результатом которой является грамматический символ <TT>Z</TT>, то прочитать
в таблице состояний элемент Z <SUB>i j</SUB>, находящийся в строке <TT>Y<I><SUB>K1</SUB></I></TT>
и столбце <TT>Z</TT>. Записать <TT>Y<I><SUB>K1</SUB></I></TT> и прочитанный
символ Z <SUB>i j</SUB> в магазин и выполнять п.1.</LI>
</OL>
Используя описанный алгоритм, работу распознавателя, заданного таблицами
7.1 и 7.2, можно представить в виде последовательности конфигураций:</BLOCKQUOTE>
</BLOCKQUOTE>
&nbsp;
<CENTER><TABLE BORDER >
<TR>
<TH>Магазин</TH>

<TH>Вход</TH>

<TH>Действие</TH>
</TR>

<TR>
<TD>
<DIV id="1"><TT>&nbsp;1. h<SUB>0</SUB></TT></DIV>
</TD>

<TD><TT>aaccbcb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>П</TT></TD>
</TR>

<TR>
<TD>
<DIV id="2"><TT>&nbsp;2. h<SUB>0</SUB>a<SUB>1</SUB></TT></DIV>
</TD>

<TD><TT>accbcb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>П</TT></TD>
</TR>

<TR>
<TD>
<DIV id="3"><TT>&nbsp;3. h<SUB>0</SUB>a<SUB>1</SUB>a<SUB>1</SUB></TT></DIV>
</TD>

<TD><TT>ccbcb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>П</TT></TD>
</TR>

<TR>
<TD>
<DIV id="4"><TT>&nbsp;4. h<SUB>0</SUB>a<SUB>1</SUB>a<SUB>1</SUB>c<SUB>2</SUB></TT></DIV>
</TD>

<TD><TT>cbcb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>С(2)</TT></TD>
</TR>

<TR>
<TD>
<DIV id="5"><TT>&nbsp;5. h<SUB>0</SUB>a<SUB>1</SUB>a<SUB>1</SUB>&lt;I<SUB>12</SUB>></TT></DIV>
</TD>

<TD><TT>cbcb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>П</TT></TD>
</TR>

<TR>
<TD>
<DIV id="6"><TT>&nbsp;6. h<SUB>0</SUB>a<SUB>1</SUB>a<SUB>2</SUB>&lt;I<SUB>12</SUB>>c<SUB>2</SUB></TT></DIV>
</TD>

<TD><TT>bcb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>С(2)</TT></TD>
</TR>

<TR>
<TD>
<DIV id="7"><TT>&nbsp;7. h<SUB>0</SUB>a<SUB>1</SUB>a<SUB>2</SUB>&lt;I<SUB>12</SUB>>&lt;I<SUB>13</SUB>></TT></DIV>
</TD>

<TD><TT>bcb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>П</TT></TD>
</TR>

<TR>
<TD>
<DIV id="8"><TT>&nbsp;8. h<SUB>0</SUB>a<SUB>1</SUB>a<SUB>2</SUB>&lt;I<SUB>12</SUB>>&lt;I<SUB>13</SUB>>b<SUB>1</SUB></TT></DIV>
</TD>

<TD><TT>cb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>С(1)</TT></TD>
</TR>

<TR>
<TD>
<DIV id="9"><TT>&nbsp;9. h<SUB>0</SUB>a<SUB>1</SUB>&lt;I<SUB>12</SUB>></TT></DIV>
</TD>

<TD><TT>cb</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>П</TT></TD>
</TR>

<TR>
<TD>
<DIV id="10"><TT>10. h<SUB>0</SUB>a<SUB>1</SUB>&lt;I<SUB>12</SUB>>c<SUB>2</SUB></TT></DIV>
</TD>

<TD><TT>b</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>С(2)</TT></TD>
</TR>

<TR>
<TD>
<DIV id="11"><TT>11. h<SUB>0</SUB>a<SUB>1</SUB>&lt;I<SUB>12</SUB>>&lt;I<SUB>13</SUB>></TT></DIV>
</TD>

<TD><TT>b</TT><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>П</TT></TD>
</TR>

<TR>
<TD>
<DIV id="12"><TT>12. h<SUB>0</SUB>a<SUB>1</SUB>&lt;I<SUB>12</SUB>>&lt;I<SUB>13</SUB>>b<SUB>1</SUB></TT></DIV>
</TD>

<TD><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>С(1)</TT></TD>
</TR>

<TR>
<TD>
<DIV id="13"><TT>13. h<SUB>0</SUB>I<SUB>0</SUB></TT></DIV>
</TD>

<TD><FONT FACE="Symbol">^</FONT></TD>

<TD><TT>Д</TT></TD>
</TR>
</TABLE></CENTER>
&nbsp;
<BLOCKQUOTE>
<BLOCKQUOTE>В общем случае процедуру построения восходящего распознавателя
по заданной грамматике, не содержащей аннулирующих правил, можно описать
следующим образом:</BLOCKQUOTE>
</BLOCKQUOTE>

<OL>
<OL>
<OL>
<LI id="1">
Вычислить для данной грамматики функции <TT>ВПЕРВ</TT> и <TT>ВПОСЛЕ</TT>.</LI>

<LI id="2">
<A NAME="7.2-alg2-2"></A>Построить недетерминированную таблицу, имеющую
по одному столбцу для каждого грамматического символа и по одной строке
для каждого грамматического вхождения и маркера дна. Элемент в строке <TT>R<I><SUB>j</SUB></I></TT>
и столбце <TT>С</TT> должен содержать все грамматические вхождения <TT>C<I><SUB>K</SUB></I></TT>,
такие, что <TT>C<I><SUB>K</SUB></I> <FONT FACE="Symbol">О</FONT> ВПОСЛЕ(R<I><SUB>j</SUB></I>)</TT>.</LI>

<LI id="3">
<A NAME="7.2-alg2-3"></A>Если таблица, построенная на шаге 2, получается
недетерминированной, то нужно преобразовать эту таблицу в детерминированную,
рассматривая ее как недетерминированную таблицу переходов конечного автомата
с начальным состоянием h<SUB>o</SUB>.</LI>

<LI id="4">
Состояния, полученные на шаге 3 (кроме состояния, соответствующего пустому
множеству), следует использовать в качестве магазинных символов. Полученная
таблица переходов может содержать переходы в пустое множество. Такие элементы
следует понимать как запрещенные и рассматривать переходы в них как ошибки.</LI>

<LI id="5">
Таблица действий заполняется строка за строкой согласно множествам грамматических
вхождений, помечающих строки, следующим образом:</LI>

<TABLE BORDER=0 >
<TR>
<TD VALIGN=TOP>а.</TD>

<TD>
<DIV id="а">Если строка отмечена начальным вхождением I<SUB>0</SUB>, то
в столбец, соответствующий маркеру конца строки <FONT FACE="Symbol">^</FONT>,
заносится операция Допустить, а во все остальные строки - операция Отвергнуть.</DIV>
</TD>
</TR>

<TR>
<TD VALIGN=TOP>
<DIV id="б">б.</DIV>
</TD>

<TD>
<DIV id="б">Если строка отмечена грамматическим вхождением, являющимся
самым правым вхождением в правиле с номером k, то во все элементы строки
помещается операция Cвертка(k).</DIV>
</TD>
</TR>

<TR>
<TD VALIGN=TOP>
<DIV id="в">в.</DIV>
</TD>

<TD>
<DIV id="в">Если строка отмечена маркером дна <TT>h<SUB>0</SUB></TT> или
если все грамматические вхождения, входящие во множество, помечающее строку,
не являются самыми правыми в своих правилах, то в столбец, отмеченный концевым
маркером строки, заносится операция Отвергнуть, а во все остальные столбцы
— операция Перенос.</DIV>
</TD>
</TR>

<TR>
<TD VALIGN=TOP>
<DIV id="г"><A NAME="5g"></A>г.</DIV>
</TD>

<TD>
<DIV id="г">Если множество, помечающее строку после преобразования НКА,
содержит начальное вхождение и хотя бы одно вхождение, отличное от начального,
но не содержит ни одного самого правого вхождения, то в столбец, помеченный
символом конца строки, нужно поместить операцию Допустить, а в остальные
столбцы — Перенос.</DIV>
</TD>
</TR>
</TABLE>
&nbsp;</OL>
Приведенная процедура обеспечивает построение распознавателя, только если
заданная грамматика принадлежит подклассу LR(0), поскольку действия в каждой
строке управляющей таблицы одинаковы, то есть не зависят от входного символа.
Если же в процессе построения обнаруживается, что хотя бы один из пунктов
(а), (б), (в) или (г) выполнить нельзя, то это означает, что для заданной
грамматики нельзя построить LR(0)-распознаватель и что она не является
LR(0)-грамматикой.</OL>
</OL>

<HR NOSHADE WIDTH="100%"><A HREF="Part3121.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15 ALIGN=ABSCENTER></A><FONT COLOR="#009900"><FONT SIZE=-1>
Пред.Страница&nbsp;<A HREF="Part31.htm">&nbsp;<A HREF="Part3122.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15 ALIGN=ABSBOTTOM></A></A>
След.Страница&nbsp;<A HREF="Index3.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A>&nbsp;
Раздел&nbsp;<A HREF="../index.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A>&nbsp;
Содержание&nbsp;</FONT></FONT>
</BODY>
</HTML>
