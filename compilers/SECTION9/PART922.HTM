<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>Асинхронные автоматы</TITLE>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0Gold (Win95; I) [Netscape]">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<P><A HREF="Part921.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A><FONT FACE="Times New Roman"><FONT COLOR="#008000">Пред.Страница<A HREF="Part923.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A></FONT><FONT COLOR="#006600">
След.Страница<A HREF="index92.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A>
Раздел<A HREF="../index.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A>
Содержание</FONT></FONT></P>

<P>
<HR></P>

<BLOCKQUOTE>
<BLOCKQUOTE>
<P><B><I><U><FONT COLOR="#0000FF">9.2.2. СОСТЯЗАНИЕ ЭЛЕМЕНТОВ ПАМЯТИ</FONT></U></I></B></P>
</BLOCKQUOTE>
</BLOCKQUOTE>

<P> </P>

<P>Переход к асинхронной модели автомата связан, прежде всего, с изменнием
ограничений, накладываемых на характер входных сигналов. Использование
сигналов, присутствующих на входе в каждый момент времени, позволяет учитывать
реальные процессы, происходящие при изменении состояний автомата, и связанные
с задержками срабатывания элементов памяти. Такие задержки обусловлены
как физическими прицессами, протекающими в реальных элементах, так и распределенными
параметрами соединений. Величина задержки срабатывания каждого конкретного
элемента памяти, как правило, неизвестна. Эта величина обычно характеризуется
максимальной задержкой t<SUB>зm</SUB>, которая принимается пстоянной для
элментов опредленного типа. При этом предполагают, что величина задержки
каждого конкретного элемента t<SUB>зm</SUB> заключена в прделах 0 &lt;
t<SUB>зi</SUB> &lt;= t<SUB>зm.<BR>
</SUB>   Наличие различных задержек элементов памяти приводит к тому, что
при переходе автомата из одного состояния в другое возникают ситуации,
когда жлементы памяти срабатывают не одновременно. Последовательность срабатывания
элементов памяти определяется соотношением их задержек. Очевидно, что первым
должен срабатывать элемент, обладающийнаименьшей задержкой. Такое явлее
называется <A NAME="состязания элементов памяти"></A><B><I><FONT COLOR="#800040">состязаниями</FONT></I></B>,
или <B><I><FONT COLOR="#0000FF">гонками</FONT></I></B> элементов памяти.
При этом говорят, что состязание выигрывает элемент, обладаюший наименьшей
задержкой. <BR>
   Состязания элементов памяти приводят к тому, что автомат при зменении
состояния не сразу оказывается в том состоянии, которое запланировано условиями
работы, а переходит в него через несколько нпредусмотренных транзитных
состояний. В результате такого перехода, независимо от соотношений задержек
элементов памяти, авомат достигает того состояния, в которое он должен
перейти, то состязания называются<A NAME="некритические сос тязания"></A>
<B><I><FONT COLOR="#800040">некритическими</FONT></I></B>. Если же существует
жотя бы одно сочетание значений задержек элементов памяти, при котором
автомат не достигает запланированного состояния, то состязания называются
<A NAME="критические состязания"></A><B><I><FONT COLOR="#800040">критическими</FONT></I></B>.
<BR>
   Рассмотрим, как происходят состязания на примерах, используя таблицу
переходов, приведенную на рис. 3. В клетках таблицы, соответствующих сходным
состояниям, находятся кружки с цыфрой. Каждая цыфра является номером рассматриваемого
примера. Точками в таблице отмечены клетки, соответствующие транзитным
состояниям, а кружочками с точкой - состояния, в которых оказывается автомат
после завершения перехода. Горизонтальные линии со стрелкой определяют
изменения входных сигналов, вертикальные сплошные линии - переходы автомата,
а пунктирные линии - переходы обусловленные состязаниями.<BR>
Первый пример показывает как совершаются переходы в приведенной таблице.
При этом автомат проходит последовательность состояний 000-001-101-111.
Заметим, что в этой последовательности каждый переход в новое состояние
совершается с изменением значения только одной внутренней переменой (одного
элемента памяти), поэтому состязания отсутствуют.<BR>
</P>

<P><IMG SRC="DRAW/4.gif" HEIGHT=682 WIDTH=444></P>

<P> </P>

<P>    Во втором примере первый переход в последовательности состояний
101-110 выполняется с изменением значений двух внутренних переменных y<SUB>2</SUB>
и y<SUB>3</SUB>. Если время задерхки элементов памяти, соответствующим
этим переменным, одинаково t<SUB>32 </SUB>= t<SUB>33</SUB>, то состязания
отсутствуют и автомат проходит последовательность состояний 101 - 110-100-000.
Если же t<SUB>32 </SUB>&lt; t<SUB>33</SUB>, то состязание выигрывает второй
элемент памяти и из состояния 101 автомат попадает в состояние 111, совершая
незапланированный переход. В этом случае автомат проходит последовательность
состояний 101-111-110-100-000, заканчивающуюся устойчивым состоянием 000,
в которое автомат должен попасть при отсутствии состязаний. Если t<SUB>32</SUB>
&gt; t<SUB>33</SUB>, то автомат проходит последовательность состояний 101-100-000
и так же достигает заданного устойчивого состояния 000. Следовательно,
в рассматриваемом случае имеют место некритические состязания. Пример показывает
также, что некритические состяния огут изменять время, затрачиваемое автоматом
на смену состояния, поскольку автомат может совершать различное число переходов
в зависимости от соотношения между задежками.<BR>
     В третьем примере (при отсутствии состязаний) автомат должен из состояния
111 перейти в состояние 100. Если же t<SUB>32 </SUB>&gt; t<SUB>33</SUB>,
то состязани выигрывает третий элемент памяти, и автомат вместо состония
100 оказывается в состоянии 110, которое является устойчивым. В этом случае
имеют место критические состязания, поскольку автомат не достигает заплпнированного
состояния 100.<BR>
    Четвертый пример, приведенный в таблице, не связан с состязаниями элементов
памяти. Он представляет собой иллюстрацию явления, встречающегося в асинхронных
автоматах, которое называется <A NAME="явление генерации"></A><B><I><FONT COLOR="#800040">генерацией</FONT></I></B>.
Это явление заключается в том, что автомат последовательно совершает переходы
между транзитными состояниями, возвращаясь каждый раз в исходное состояние.
Генерация прерывается при изменении входных сигналов. Однако при этом сосояние,
в котором окажется автомат, зависит от того, с каким транзитным состоянием
совпало изменение входного сигнала.<BR>
В заключение отметим, что одной из основных задач стадии структурного синтеза
асинхронных автоматов является построение схемы без критических состязаний.
Эта задача решается обычно на этапе кодирования состояний автомата.<BR>
</P>

<P>
<HR></P>

<P><A HREF="Part921.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A><FONT FACE="Times New Roman"><FONT COLOR="#008000">Пред.Страница<A HREF="Part923.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A></FONT><FONT COLOR="#006600">
След.Страница<A HREF="index92.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A>
Раздел<A HREF="../index.htm"><IMG SRC="GrBall.gif" BORDER=0 HEIGHT=15 WIDTH=15></A>
Содержание</FONT></FONT></P>

</BODY>
</HTML>
